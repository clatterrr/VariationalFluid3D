// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWStructuredBuffer<float> AmatCenter;
RWStructuredBuffer<float3> AmatDown;
RWStructuredBuffer<float3> AmatUp;

RWStructuredBuffer<float> xVec;
RWStructuredBuffer<float> yVec;
int Nx;
[numthreads(512,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float term0 = AmatCenter[id.x] * xVec[id.x];
    int ix = floor(id.x % Nx); // 一定要加floor
    int iy = floor(id.x % (Nx * Nx) / Nx);
    int iz = floor(id.x / (Nx * Nx));
    float term1 = 0;
    if (ix >= 1)
    {
        term1 += AmatDown[id.x].x * xVec[id.x - 1];// 这行有问题？
    }
    if (ix <= Nx - 2)
    {
        term1 += AmatUp[id.x].x * xVec[id.x + 1];
    }
    if (iy >= 1)
    {
        term1 += AmatDown[id.x].y * xVec[id.x - Nx];
    }
    if (iy <= Nx - 2)
    {
        term1 += AmatUp[id.x].y * xVec[id.x + Nx];
    }

    if (iz >= 1)
    {
        term1 += AmatDown[id.x].z * xVec[id.x - Nx * Nx];
    }


    if (iz <= Nx - 2)
    {
       term1 += AmatUp[id.x].z * xVec[id.x + Nx * Nx];
    }
    yVec[id.x] =  term0 + term1;
}
